#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.12
# In conjunction with Tcl version 8.6
#    Apr 07, 2020 01:22:24 PM
#    Apr 07, 2020 01:25:58 PM


import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True
def set_Tk_var():
    global path
    path = StringVar()
    global sourceText
    sourceText = StringVar()
    global language
    language = StringVar()
    global message
    message = StringVar()
    global sourceAudio
    sourceAudio = StringVar()
    global outputText
    outputText = StringVar()
    global transcript
    transcript = StringVar()

def get_TTS(STR, language, path):
    import site
    site.addsitedir('C:\\Users\\rebecca.haskmann\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\site-packages')
    from gtts import gTTS
    #set language manually to test function
    tts = gTTS(STR, lang=language)
    tts.save(path+".mp3")
    message.set(message.get()+STR + " converted to audio and saved to "+path+".mp3"+"\n")
    
def clearBTN_leftClick(p1):
    print('STTTS_support.clearBTN_leftClick')
    sys.stdout.flush()
    path.set("")
    sourceText.set("")   
    language.set("en")

def transcribe(file, lang):
    with open("api-key.json") as f:
        API_KEY = f.read()
    import speech_recognition as sr
    print("transcribing {}".format(file))
    r = sr.Recognizer()
    with sr.AudioFile(file) as source:
        audio = r.record(source)
    text = r.recognize_google_cloud(audio, credentials_json=API_KEY, language=lang)
    return text

def Exit_LeftClick(p1):
    print('STTTS_support.Exit_LeftClick')
    sys.stdout.flush()
    destroy_window()

def STT_Submit_leftClick(p1):
    print('STTTS_support.STT_Submit_leftClick')
    sys.stdout.flush()
    sourceAudio.set(w.SourceAudio.get())
    outputText.set(w.STT_OutputPath.get())   
    text=transcribe(sourceAudio.get(), language.get())
    text.save(outputText+".txt")

def TTS_Submit_leftClick(p1):
    print('STTTS_support.TTS_Submit_leftClick')
    sys.stdout.flush()
    path.set(w.TTS_OutputPath.get())
    sourceText.set(w.TextEntry.get())
    get_TTS(sourceText.get(), language.get(), path.get())

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import STTTS
    STTTS.vp_start_gui()





